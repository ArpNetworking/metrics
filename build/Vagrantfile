# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  # Base Centos7 Image
  config.vm.box = "centos/7"
  # Graphana
  config.vm.network "forwarded_port", guest: 3000, host: 8081
  # KairosDb
  config.vm.network "forwarded_port", guest: 8080, host: 8082

  config.vm.provider :virtualbox do |vb|
    vb.memory = "2048"
    vb.cpus = "2"
  end
  config.vm.provider :libvirt do |libvirt|
    libvirt.memory = 2048
    libvirt.cpus = 2
  end

  # NOTE:
  # - Metric Portal runs locally on port 8080
  # - Metrics Aggregator Daemon runs locally on port 7090
  # - Cluster Aggregator runs locally on ports 7065 and 7066

  # System preparation
  config.vm.provision "shell", inline: "sudo yum -y install epel-release 2>&1"
  config.vm.provision "shell", inline: "sudo yum -y install git java vim wget dnf"

  # Install Scylla
  config.vm.provision "shell", inline: "sudo wget -O /etc/yum.repos.d/scylla.repo http://downloads.scylladb.com/rpm/centos/scylla-1.7.repo 2>&1"
  config.vm.provision "shell", inline: "sudo dnf -y remove abrt; true"
  config.vm.provision "shell", inline: "sudo dnf -y install scylla"
  config.vm.provision "shell", inline: "sudo sed -i 's/# start_rpc: true/start_rpc: true/' /etc/scylla/scylla.yaml"
  config.vm.provision "shell", inline: "sudo scylla_setup --no-raid-setup --nic eth0 --ntp-domain centos"

  # Install KairosDb
  config.vm.provision "shell", inline: "sudo dnf -y install https://github.com/kairosdb/kairosdb/releases/download/v1.1.3/kairosdb-1.1.3-1.rpm"
  config.vm.provision "shell", inline: "sudo service kairosdb stop"
  config.vm.provision "shell", inline: "sudo sed -i 's/^\\(kairosdb.service.datastore=org.kairosdb.datastore.h2.H2Module\\)$/#\\1/' /opt/kairosdb/conf/kairosdb.properties"
  config.vm.provision "shell", inline: "sudo sed -i 's/^#\\(kairosdb.service.datastore=org.kairosdb.datastore.cassandra.CassandraModule\\)$/\\1/' /opt/kairosdb/conf/kairosdb.properties"

  # Install Graphana
  config.vm.provision "shell", inline: "sudo dnf -y install npm"
  config.vm.provision "shell", inline: "sudo dnf -y install https://s3-us-west-2.amazonaws.com/grafana-releases/master/grafana-4.4.0-8177pre1.x86_64.rpm"
  config.vm.provision "shell", inline: "sudo mkdir /var/lib/grafana/plugins; pushd /var/lib/grafana/plugins; sudo git clone https://github.com/BrandonArp/kairosdb-datasource.git; pushd kairosdb-datasource; sudo npm install -g grunt; sudo npm install; grunt; popd; popd; sudo chown -R grafana:grafana /var/lib/grafana/plugins"
  config.vm.provision "shell", inline: "sudo sed -i 's/^SCYLLA_ARGS=\"/SCYLLA_ARGS=\"--developer-mode 1 /' /etc/sysconfig/scylla-server"

  # Create control script
  config.vm.provision "shell", inline: "echo '#!/bin/bash' > ./start"
  config.vm.provision "shell", inline: "echo 'sudo systemctl enable scylla-server' >> ./start"
  config.vm.provision "shell", inline: "echo 'sudo systemctl enable kairosdb' >> ./start"
  config.vm.provision "shell", inline: "echo 'sudo systemctl enable grafana-server' >> ./start"
  config.vm.provision "shell", inline: "echo 'sleep 5; sudo systemctl start scylla-server' >> ./start"
  config.vm.provision "shell", inline: "echo 'sleep 15; sudo systemctl start kairosdb' >> ./start"
  config.vm.provision "shell", inline: "echo 'sleep 5; sudo systemctl start grafana-server' >> ./start"
  config.vm.provision "shell", inline: "chmod +x ./start"

  # Start the stack
  config.vm.provision "shell", inline: "./start"

  # Create Kairos datasource in Grafana
  config.vm.provision "shell", inline: "curl -X POST --user admin:admin -H 'content-type: application/json;charset=UTF-8' -d '{\"name\":\"Kairos\",\"type\":\"grafana-kairosdb-datasource\",\"url\":\"http://localhost:8080\",\"access\":\"proxy\",\"jsonData\":{},\"secureJsonFields\":{},\"isDefault\":true}' http://localhost:3000/api/datasources"
end
