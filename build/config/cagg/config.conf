monitoringCluster="metrics_dev"
logDirectory="logs"
hostPipelineConfiguration="../metrics/build/config/cagg/hostPipeline.conf"
clusterPipelineConfiguration="../metrics/build/config/cagg/clusterPipeline.conf"
httpHost="0.0.0.0"
httpPort=7066
httpHealthCheckPath="/ping"
httpStatusPath="/status"
aggregationHost="0.0.0.0"
aggregationPort=7065
jvmMetricsCollectionInterval="PT1.0S"
maxConnectionTimeout="PT2M"
minConnectionTimeout="PT1M"
clusterHostSuffix=".cluster"
clusterJoinActor.type="com.arpnetworking.akka.NonJoiningClusterJoiner"
calculateClusterAggregations=False
reaggregationDimensions=["host"]
reaggregationInjectClusterAsHost=False
rebalanceConfiguration {
  maxParallel=100
  threshold=500
}
akkaConfiguration {
  akka {
    extensions=["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
    loggers=["akka.event.slf4j.Slf4jLogger"]
    loglevel="DEBUG"
    stdout-loglevel="DEBUG"
    logging-filter="akka.event.slf4j.Slf4jLoggingFilter"
    actor {
      serializers {
        kryo="com.romix.akka.serialization.kryo.KryoSerializer"
      }
      serialization-bindings {
        "java.lang.Object"="kryo"
        "java.io.Serializable"="none"
      }
      kryo {
        type="graph"
        idstrategy="default"
        buffer-size=4096
        max-buffer-size=-1
      }
      debug {
        unhandled="on"
      }
      provider="akka.cluster.ClusterActorRefProvider"
    }
    cluster {
      seed-nodes=["akka.tcp://Metrics@127.0.0.1:2551"]
      auto-down-unreachable-after="300s"
      sharding {
        guardian-name="sharding"
        role=""
        retry-interval="2 s"
        buffer-size=100000
        handoff-timeout="60 s"
        rebalance-interval="10 s"
        snapshot-interval="720 s"
        state-store-mode="persistence"
        least-shard-allocation-strategy {
          rebalance-threshold=10
          max-simultaneous-rebalance=3
        }
      }
    }
    remote.log-remote-lifecycle-events="on"
    remote.netty.tcp.hostname="127.0.0.1"
    remote.netty.tcp.port=2551
    persistence {
      journal {
        plugin = "cassandra-journal"
      }
      snapshot-store {
        plugin = "cassandra-snapshot-store"
      }
    }
  }
  cassandra-journal {
    replication-factor = 1
    write-consistency = "ONE"
    read-consistency = "ONE"
  }
  cassandra-snapshot-store {
    replication-factor = 1
  }
}
