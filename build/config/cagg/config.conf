# Pipelines
# ~~~~
hostPipelineConfiguration="/opt/cluster-aggregator/config/hostPipeline.conf"
clusterPipelineConfiguration="/opt/cluster-aggregator/config/clusterPipeline.conf"

# Http Server
# ~~~~
#httpHost="0.0.0.0"
#httpPort=7066
#httpHealthCheckPath="/ping"
#httpStatusPath="/status"
#httpVersionPath="/version"

# Metrics
# ~~~~
monitoringCluster="metrics_dev"
#monitoringService="cluster_aggregator"
monitoringSinks=[
  {
    class = "com.arpnetworking.metrics.impl.ApacheHttpSink"
    uri = "http://mad:7090/metrics/v3/application"
#    bufferSize = 10000
#    parallelism = 2
#    maxBatchSize = 500
#    emptyQueueInterval = "PT0.5S"
#    eventsDroppedLoggingInterval = "PT1M"
#    dispatchErrorLoggingInterval = "PT1M"
#    unsupportedDataLoggingInterval = "PT1M"
  }
]
#jvmMetricsCollectionInterval="PT1.0S"

# Logging
# ~~~~
logDirectory="logs"

# Aggregation
# ~~~~
aggregationHost="0.0.0.0"
aggregationPort=7065
maxConnectionTimeout="PT3M"
minConnectionTimeout="PT1M"
clusterHostSuffix=".cluster"
calculateClusterAggregations=False
reaggregationDimensions=["host"]
reaggregationInjectClusterAsHost=False

# Akka
# ~~~~
rebalanceConfiguration {
  maxParallel=100
  threshold=500
}
akkaConfiguration {
  akka {
    loggers=["akka.event.slf4j.Slf4jLogger"]
    loglevel="DEBUG"
    stdout-loglevel="DEBUG"
    logging-filter="akka.event.slf4j.Slf4jLoggingFilter"
    actor {
      provider="akka.cluster.ClusterActorRefProvider"
      serializers {
        proto="akka.remote.serialization.ProtobufSerializer"
      }
      serialization-bindings {
        "com.arpnetworking.metrics.aggregation.protocol.Messages$StatisticSetRecord"="proto"
      }
      debug {
        unhandled="on"
      }
    }
    cluster {
      sharding {
        state-store-mode="persistence"
      }
    }
    remote {
      log-remote-lifecycle-events="on"
    }
    persistence {
      journal {
        plugin="cassandra-journal"
      }
      snapshot-store {
        plugin="cassandra-snapshot-store"
      }
    }
  }
  cassandra-journal {
    replication-factor = 1
    write-consistency = "ONE"
    read-consistency = "ONE"
    contact-points.0 = "cassandra"
  }
  cassandra-snapshot-store {
    replication-factor = 1
    contact-points.0 = "cassandra"
  }
}