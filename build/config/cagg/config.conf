monitoringCluster="metrics_dev"
logDirectory="logs"
hostPipelineConfiguration="../metrics/build/config/cagg/hostPipeline.conf"
clusterPipelineConfiguration="../metrics/build/config/cagg/clusterPipeline.conf"
httpHost="0.0.0.0"
httpHealthCheckPath="/ping"
httpStatusPath="/status"
aggregationHost="0.0.0.0"
jvmMetricsCollectionInterval="PT1.0S"
maxConnectionTimeout="PT2M"
minConnectionTimeout="PT1M"
clusterHostSuffix=".cluster"
calculateClusterAggregations=False
reaggregationDimensions=["host"]
reaggregationInjectClusterAsHost=False
rebalanceConfiguration {
  maxParallel=100
  threshold=500
}
akkaConfiguration {
  akka {
    loggers=["akka.event.slf4j.Slf4jLogger"]
    loglevel="DEBUG"
    stdout-loglevel="DEBUG"
    logging-filter="akka.event.slf4j.Slf4jLoggingFilter"
    actor {
      provider="akka.cluster.ClusterActorRefProvider"
      serializers {
        proto="akka.remote.serialization.ProtobufSerializer"
      }
      serialization-bindings {
        "com.arpnetworking.metrics.aggregation.protocol.Messages$StatisticSetRecord"="proto"
      }
      debug {
        unhandled="on"
      }
    }
    cluster {
      sharding {
        state-store-mode="persistence"
      }
    }
    remote {
      log-remote-lifecycle-events="on"
      netty.tcp.hostname="127.0.0.1"
    }
    persistence {
      journal {
        plugin="cassandra-journal"
      }
      snapshot-store {
        plugin="cassandra-snapshot-store"
      }
    }
  }
  cassandra-journal {
    replication-factor = 1
    write-consistency = "ONE"
    read-consistency = "ONE"
  }
  cassandra-snapshot-store {
    replication-factor = 1
  }
}
