<?xml version="1.0"?>
<!--
  ~ Copyright 2015 Groupon.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>com.arpnetworking.build</groupId>
    <artifactId>arpnetworking-parent-pom</artifactId>
    <version>1.0.8</version>
    <relativePath />
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.arpnetworking.metrics</groupId>
  <artifactId>tsd-parent</artifactId>
  <packaging>pom</packaging>
  <name>Metrics Tsd Parent</name>
  <description />
  <version>0.3.6</version>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>barp</id>
      <name>Brandon Arp</name>
      <email>barp@groupon.com</email>
      <organization>Groupon</organization>
      <organizationUrl>http://www.groupon.com</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>vkoskela</id>
      <name>Ville Koskela</name>
      <email>vkoskela@groupon.com</email>
      <organization>Groupon</organization>
      <organizationUrl>http://www.groupon.com</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:ArpNetworking/metrics.git</connection>
    <developerConnection>scm:git:git@github.com:ArpNetworking/metrics.git</developerConnection>
    <url>https://github.com/arpnetworking/metrics</url>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>tsd-core</module>
    <module>tsd-aggregator</module>
    <module>cluster-aggregator</module>
    <module>performance-test</module>
    <module>generator</module>
  </modules>

  <properties>
    <!-- IMPORTANT: Any changes to dependencies, including versions, require
      validation that the shading rules correctly resolve the transitive closure
      of all non-test packages. You can validate that the transitive closure of
      dependencies was covered by checking the pom file generated by the shade
      plugin: dependency-reduced-pom.xml.

      In general, there are two strategies for dealing with additional
      dependencies:

      1) If we depend on package A and it on package B but we don't use any
      features that require package B we may exclude those classes from package
      A and prune the dependency on package B. This will remove package B.

      2) If we depend on package A and it on package B and we cannot prune the
      dependency then include the package and classpath(s) for package B in the
      shade plugin's mapping. This will hide package B.
    -->

    <!--Dependency versions-->
    <akka.version>2.3.11</akka.version>
    <akka.http.version>1.0-RC1</akka.http.version>
    <findbugs.annotations.version>3.0.0</findbugs.annotations.version>
    <guava.version>18.0</guava.version>
    <guice.version>4.0</guice.version>
    <hamcrest.version>2.0.0.0</hamcrest.version>
    <jackson.version>2.6.2</jackson.version>
    <joda.time.version>2.8.2</joda.time.version>
    <jsr305.version>3.0.0</jsr305.version>
    <junit.version>4.12</junit.version>
    <logback.version>1.1.3</logback.version>
    <logback.steno.version>1.9.3</logback.steno.version>
    <maven.version>3.3.3</maven.version>
    <metrics.client.version>0.3.7</metrics.client.version>
    <metrics.jvm.extra.version>0.3.5</metrics.jvm.extra.version>
    <mockito.version>1.10.19</mockito.version>
    <oval.version>1.82</oval.version>
    <scala.version>2.11</scala.version>
    <slf4j.version>1.7.12</slf4j.version>

    <!-- Version overrides, pending dependency plugin updates to pick the highest
      version as a resolution strategy -->
    <commons.codec.version>1.10</commons.codec.version>
    <netty.version>3.10.3.Final</netty.version>
    <scala.java.compat.version>0.7.0</scala.java.compat.version>

    <!--Plugin versions-->
    <maven.shade.plugin.version>2.4.1</maven.shade.plugin.version>
    <maven.wrapper.plugin.version>0.0.4</maven.wrapper.plugin.version>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.rimerosolutions.maven.plugins</groupId>
        <artifactId>wrapper-maven-plugin</artifactId>
        <version>${maven.wrapper.plugin.version}</version>
        <inherited>false</inherited>
        <configuration>
          <baseDistributionUrl>http://mirrors.ibiblio.org/maven2/org/apache/maven/apache-maven/</baseDistributionUrl>
          <mavenVersion>${maven.version}</mavenVersion>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>com.arpnetworking.logback</groupId>
        <artifactId>logback-steno</artifactId>
        <version>${logback.steno.version}</version>
      </dependency>
      <!-- Metrics -->
      <dependency>
        <groupId>com.arpnetworking.metrics</groupId>
        <artifactId>metrics-client</artifactId>
        <version>${metrics.client.version}</version>
      </dependency>
      <dependency>
        <groupId>com.arpnetworking.metrics.extras</groupId>
        <artifactId>jvm-extra</artifactId>
        <version>${metrics.jvm.extra.version}</version>
      </dependency>
      <!-- Google -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <!-- Jackson -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-guava</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk7</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-joda</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <!-- Akka -->
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-actor_${scala.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http-java-experimental_${scala.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http-core-experimental_${scala.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-stream-experimental_${scala.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-slf4j_${scala.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <!-- General -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda.time.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.oval</groupId>
        <artifactId>oval</artifactId>
        <version>${oval.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs.annotations.version}</version>
      </dependency>
      <!-- Test - General -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>java-hamcrest</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- These are listed to resolve the problems caused by picking "earlier" versions that are closer
           to the root. -->
      <dependency>
        <groupId>org.scala-lang.modules</groupId>
        <artifactId>scala-java8-compat_${scala.version}</artifactId>
        <version>${scala.java.compat.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
