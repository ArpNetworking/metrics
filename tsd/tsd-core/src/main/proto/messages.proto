// Copyright 2014 Brandon Arp
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
package com.arpnetworking.tsdcore;
option java_package = "com.arpnetworking.tsdcore";

message StatisticRecord {
    required string statistic = 1;
    required double value = 2;
    required string unit = 3;
    required bool user_specified = 4;
    optional bytes supporting_data = 5;
}

message SamplesSupportingData {
    required string unit = 1;
    repeated double samples = 2 [packed=true];
}

message SparseHistogramEntry {
    required double bucket = 1;
    required int32 count = 2;
}

message SparseHistogramSupportingData {
    required string unit = 1;
    repeated SparseHistogramEntry entries = 2;
}

message HdrHistogramSupportingData {
    required bytes encoded = 1;
}

message HostIdentification {
    optional string host_name = 1;
    optional string cluster_name = 2;
}

message LegacyAggRecord {
    required string service = 1;
    required string metric = 2;
    optional string statistic = 3;
    optional string period = 4;
    optional string period_start = 5;
    optional double statistic_value = 6;
    repeated double statistic_samples = 7 [packed=true];
    optional int32  raw_sample_count = 8;
}

message AggregationRecord {
    required string service = 1;
    required string metric = 2;
    required string statistic = 3;
    required string period = 4;
    required string period_start = 5;
    required double statistic_value = 6;
    repeated double samples = 7 [packed=true];
    required int64  population_size = 8;
    required string unit = 9;
}

message StatisticSetRecord {
    required string service = 1;
    required string cluster = 2;
    required string metric = 3;
    required string period = 4;
    required string period_start = 5;
    repeated StatisticRecord statistics = 6;
}

message HeartbeatRecord {
    required string timestamp = 1;
}
